#! /bin/sh
PREFIX=/usr
EXEC_PREFIX=
CXX=g++
WINDRES=windres
SRCDIR="`dirname $0`"
GEN_CFLAGS="-Wall -Werror"
GEN_LDFLAGS=
EXE=
NEED_FREETYPE="yes"
DEBUG="no"
DATA_DIR=

if [ "$SRCDIR" = "." ]
then
	echo >&2 "$0: error: you must not build in the source directory."
	exit 1
fi

for i in "$@"
do
case $i in
	--help)
		cat >&2 "$SRCDIR/configure.help"
		exit 1
		;;

	--prefix=*)
		PREFIX=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;

	--host=*)
		HOST=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		CXX=$HOST-g++
		WINDRES=$HOST-windres
		;;

	--exec-prefix=*)
		EXEC_PREFIX=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;

	--data-dir=*)
		DATA_DIR=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
		;;

	--no-freetype)
		NEED_FREETYPE="no"
		;;

	--debug)
		DEBUG="yes"
		;;

	*)
		echo "$0: unrecognised option: $i"
		exit 1
		;;
esac
done

if [ "$EXEC_PREFIX" = "" ]
then
	EXEC_PREFIX=$PREFIX
fi

if [ "$PREFIX" != "/usr" ]
then
	echo "$0: warning: you are using a non-standard prefix: the game might not be able to find its data files!"
fi

if [ "$DATA_DIR" != "" ]
then
	GEN_CFLAGS="$GEN_CFLAGS -DTODD_DATA_DIR=\\\"$DATA_DIR\\\""
fi

echo "checking C++ compiler..."
command -v $CXX >/dev/null 2>&1 || {
	echo >&2 "$0: could not find C++ compiler $CXX !"
	exit 1
}

echo "configuring SDL2..."
SDL_CONFIG="$PREFIX/bin/sdl2-config"
command -v $SDL_CONFIG >/dev/null 2>&1 || {
	SDL_CONFIG="$PREFIX/local/bin/sdl2-config"
	command -v $SDL_CONFIG >/dev/null 2>&1 || {
		echo >&2 "$0: SDL2 is not installed!"
		exit 1
	}
}

SDL_CFLAGS="`$SDL_CONFIG --cflags`"
SDL_LDFLAGS="`$SDL_CONFIG --libs`"

echo "configuring SDL2_image..."
echo "int main(){return 0;}" >.test.cpp
$CXX .test.cpp -o .test -lSDL2_image >/dev/null 2>&1 || { echo "SDL2_image not found!" ; rm -f .test.cpp .test ; exit 1; }
rm -f .test.cpp .test

echo "configuring SDL2_ttf..."
echo "int main(){return 0;}" >.test.cpp
$CXX .test.cpp -o .test -lSDL2_ttf >/dev/null 2>&1 || { echo "SDL2_ttf not found!" ; rm -f .test.cpp .test ; exit 1 ; }
rm -f .test.cpp .test

if [ "$NEED_FREETYPE" = "yes" ]
then
	echo "configuring FreeType (required by SDL2_ttf)..."
	FT_CONFIG="$PREFIX/bin/freetype-config"
	command -v $SDL_CONFIG >/dev/null 2>&1 || {
		echo >&2 "$0: FreeType is not installed!"
	}
	FT_CFLAGS="`$FT_CONFIG --cflags`"
	FT_LDFLAGS="`$FT_CONFIG --libs`"
else
	echo >&2 "$0: warning: assuming FreeType is not needed [--no-freetype]"
	FT_CFLAGS=
	FT_LDFLAGS=
fi

echo "checking if this is Windows..."
echo "#ifdef _WIN32" >.test.cpp
echo "#error error" >>.test.cpp
echo "#endif" >>.test.cpp
WIN="no"
$CXX -c .test.cpp -o .test.o >/dev/null 2>&1 || {
	echo "Yes, this is Windows."
	EXE=.exe
	CXX="$CXX -static"
	WIN="yes"
}
rm -f .test.cpp .test.o

CFLAGS="$GEN_CFLAGS $SDL_CFLAGS $FT_CFLAGS"
if [ "$DEBUG" = "yes" ]
then
	EXE="_debug$EXE"
	CFLAGS="$CFLAGS -ggdb -DTODD_DEBUG"
fi
LDFLAGS="$GEN_LDFLAGS -lSDL2_image -lSDL2_ttf $FT_LDFLAGS $SDL_LDFLAGS"

echo "creating config.mk..."
echo "# config.mk">config.mk
echo "# This file was automically generated by configure: do not modify it!">>config.mk
echo "PREFIX=$PREFIX">>config.mk
echo "EXEC_PREFIX=$PREFIX">>config.mk
echo "CXX=$CXX">>config.mk
echo "CFLAGS=$CFLAGS">>config.mk
echo "LDFLAGS=$LDFLAGS">>config.mk
echo "SRCDIR=$SRCDIR">>config.mk
echo "EXE=$EXE">>config.mk
echo "WINDRES=$WINDRES">>config.mk

echo "creating Makefile..."
echo "include config.mk">Makefile
if [ "$WIN" = "yes" ]
then
	mkdir winrc
	echo "EXTRA_OBJ := winrc/todd.o">>Makefile
fi
echo "include \$(SRCDIR)/build.mk">>Makefile

echo "creating Doxyfile..."
sed -e "s,SRCDIR,$SRCDIR,g" $SRCDIR/dox > Doxyfile

echo "===================================="
echo "Configuration summary:"
echo "C++ compiler: $CXX"
echo "Windows Resource compiler: $WINDRES"
echo "Source directory: $SRCDIR"
echo "Output file name: todd$EXE"
echo "Data files will be installed in: $PREFIX/share/madd.todd"
echo "Executables will be installed in: $EXEC_PREFIX/bin"

